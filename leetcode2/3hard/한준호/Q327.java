package 한준호;

class Solution {
    public int countRangeSum(int[] nums, int lower, int upper) {
        TreeSet<Long> ts = new TreeSet<>();

    }

    // 범위 합 구하기
    // 누적 합 계산하기
    // 범위 초과하면 무조건 이전 범위 줄이는게 정답? 아님
    // 줄여도 음수때문에 더 커질 수 있음
    // 누적합 문제로 바꿀 방법이 존재하나?
    // Brute Force = n^2
    // 해당 칸을 포함하게 되면, 이전 범위에 포함되면서 이 값을 포함할 수 있는 모든 애들이 가능해짐
    // 근데 이건 이전 범위의 값을 알아야 함 - 위에 몇개 짜르기
    // 근데 왼쪽에 대해서도 똑같은 작업을 수행해야 함.
    // 덧셈, 제거
    // 어떻게 카운트를 해나가야 하는가
    // dfs? n^2
    // 누적합의 결과에서, 이전 누적합의 결과를 뺄 수 있는 상황
    // 여태까지 누적합의 결과가 [now-lower, now-upper] 사이인 경우
    // 자바에서 lowerBound 어떻게 쓰지?
    // 자바는 트리셋으로 몇번째 인덱스인지를 확인할수가 없다...
    // 아니 애초에 멀티셋도 없다.
    // 세그 써야되나
    // 안해

}